{
  "name": "bootable",
  "version": "0.2.3",
  "description": "Easy application initialization for Node.js.",
  "keywords": [
    "boot",
    "init",
    "startup",
    "express"
  ],
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/bootable.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/bootable/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "dependencies": {
    "bootable-di": "0.1.x",
    "scripts": "0.1.x",
    "debug": "0.7.x"
  },
  "devDependencies": {
    "mocha": "1.x.x",
    "chai": "1.x.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "mocha --reporter spec --require test/bootstrap/node test/*.test.js test/**/*.test.js"
  },
  "readme": "# Bootable\n\n[![Build](https://travis-ci.org/jaredhanson/bootable.png)](https://travis-ci.org/jaredhanson/bootable)\n[![Coverage](https://coveralls.io/repos/jaredhanson/bootable/badge.png)](https://coveralls.io/r/jaredhanson/bootable)\n[![Quality](https://codeclimate.com/github/jaredhanson/bootable.png)](https://codeclimate.com/github/jaredhanson/bootable)\n[![Dependencies](https://david-dm.org/jaredhanson/bootable.png)](https://david-dm.org/jaredhanson/bootable)\n\n\nBootable is an extensible initialization layer for [Node.js](http://nodejs.org/)\napplications.\n\nBootable allows initialization *phases* to be registered for an application.\nThese phases will be executed sequentially during startup, after which the\napplication will be ready to run.\n\n## Install\n\n    $ npm install bootable\n\n## Usage\n\nBootable is generally applicable to any Node.js application or application\nframework.  [Express](http://expressjs.com/) will be used below, for\nillustrative purposes, as it is the most popular way of developing web\napplications.\n\n#### Mixin Bootable\n\nCreate a new application and mixin the bootable module.\n\n```javascript\nvar express = require('express')\n  , bootable = require('bootable');\n\nvar app = bootable(express());\n```\n\nOnce mixed-in, the application will have two additional functions: `app.boot`\nand `app.phase`.\n\n#### Register Phases\n\nAn application proceeds through a sequence of phases, in order to prepare\nitself to handle requests.  Modules need to be configured, databases need to be\nconnected, and routes need to be drawn.\n\nBootable packages phases for these common scenarios:\n\n```javascript\napp.phase(bootable.initializers('config/initializers'));\napp.phase(bootable.routes('routes.js'));\n```\n\nCustom phases can be registered as well, and come in synchronous and\nasynchronous flavors:\n\n```\napp.phase(function() {\n  // synchronous phase\n});\n\napp.phase(function(done) {\n  setTimeout(function() {\n    // asynchronous phase\n    done();\n  }, 1000);\n});\n```\n\n#### Boot Application\n\nCall `app.boot` with a callback to boot your application.  Phases will be\nexecuted sequentially, and the callback will be invoked when all phases are\ncomplete.\n\n```\napp.boot(function(err) {\n  if (err) { throw err; }\n  app.listen(3000);\n});\n```\n\nThis allows you to split off your initialization steps into separate, organized\nand reusable chunks of logic.\n\n## Tests\n\n    $ npm install\n    $ npm test\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jaredhanson/bootable",
  "_id": "bootable@0.2.3",
  "_from": "bootable@0.2.x"
}
